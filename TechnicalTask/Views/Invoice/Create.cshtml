@model InvoiceViewModel
@{
    ViewData["Title"] = "Create";
    var Stores = new SelectList(ViewBag.Stores,"Id","Name");
    var Items = new SelectList(ViewBag.Items,"Id","Name");

}

<h1>Create</h1>
<br />
<br />
<form asp-action="Create" asp-controller="Invoice" enctype="multipart/form-data">
    <div class="form-group">
        <label class="col-form-label" asp-for="InvoiceNo"></label>
        <input type="number" class="form-control" asp-for="InvoiceNo" />
        <span asp-validation-for="InvoiceNo" class="text-danger"></span>
    </div>
    <div class="form-group">
            <label class="col-form-label" asp-for="StoreId"></label>
            <select asp-for="StoreId" asp-items="Stores" class="form-control">
                <option>Choose a Store...</option>
            </select>

            <span asp-validation-for="StoreId" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label class="col-form-label" asp-for="Date"></label>
        <input type="date" class="form-control" asp-for="Date" />
        <span asp-validation-for="Date" class="text-danger"></span>
    </div>
    @*here will be the invoiceitems dynamic table*@
   <table id="invoiceTable" class="table">
        <thead>
            <tr>
                <th>Item</th>
                <th>Unit</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total</th>
                <th>Discount</th>
                <th>Net</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.InvoiceItemsViewModel)
            {
                <tr>
                    <td>
                        <div class="form-group">
                            <label class="col-form-label" asp-for="@item.ItemId"></label>
                            <select asp-for="@item.ItemId" asp-items="@item.AvailableItems" class="form-control" id = "InvoiceItemsViewModelItemId">
                            <option>Choose an Item...</option>
                            </select>

                            <span asp-validation-for="@item.ItemId" class="text-danger"></span>
                        </div>
                    @*@Html.DropDownListFor(x => Model.ItemId, Model.AvailableItems, "Select Item", new { @class = "form-control" })*@
                    </td>
                    <td>
                    <div class="form-group">
                    <label class="col-form-label" asp-for="@item.Unit"></label>
                    <select asp-for="@item.Unit" asp-items="@item.AvailableUnits" class="form-control"id = "InvoiceItemsViewModelUnit">
                    <option>Choose a Unit...</option>
                    </select>

                    <span asp-validation-for="@item.Unit" class="text-danger"></span>
                    </div>
                    @*@Html.DropDownListFor(x => Model.Unit, Model.AvailableUnits, "Select Unit", new { @class = "form-control" })*@
                    </td>
                    <td>
                    <div class="form-group">
                    <label class="col-form-label" asp-for="@item.Quantity"></label>
                    <input type="number" class="form-control" asp-for="@item.Quantity" id = "InvoiceItemsViewModelQuantity"/>
                    <span asp-validation-for="@item.Quantity" class="text-danger"></span>
                    </div>
                    @*@Html.TextBoxFor(x => Model.Quantity, new { @class = "form-control" })*@
                    </td>
                    <td>
                    <div class="form-group">
                    <label class="col-form-label" asp-for="@item.Price"></label>
                    <input type="number" class="form-control" asp-for="@item.Price" id = "InvoiceItemsViewModelPrice" />
                    <span asp-validation-for="@item.Price" class="text-danger"></span>
                    </div>
                    @*@Html.TextBoxFor(x => Model.Price, new { @class = "form-control" })*@
                    </td>
                    <td>
                    <div class="form-group">
                    <label class="col-form-label" asp-for="@item.InvoiceItemTotal"></label>
                    <input type="number" class="form-control" asp-for="@item.InvoiceItemTotal" id = "InvoiceItemsViewModelInvoiceItemTotal"/>
                    <span asp-validation-for="@item.InvoiceItemTotal" class="text-danger"></span>
                    </div>
                    @*@Html.TextBoxFor(x => Model.Total, new { @class = "form-control", @readonly = "readonly" })*@
                    </td>
                    <td>
                    <div class="form-group">
                    <label class="col-form-label" asp-for="@item.Discount"></label>
                    <input type="number" class="form-control" asp-for="@item.Discount" id = "InvoiceItemsViewModelDiscount"/>
                    <span asp-validation-for="@item.Discount" class="text-danger"></span>
                    </div>
                    @*@Html.TextBoxFor(x => Model.Discount, new { @class = "form-control" })*@
                    </td>
                    <td>
                    <div class="form-group">
                    <label class="col-form-label" asp-for="@item.InvoiceItemNet"></label>
                    <input type="number" class="form-control" asp-for="@item.InvoiceItemNet" id = "InvoiceItemsViewModelInvoiceItemNet" />
                    <span asp-validation-for="@item.InvoiceItemNet" class="text-danger"></span>
                    </div>
                    @*@Html.TextBoxFor(x => Model.Net, new { @class = "form-control", @readonly = "readonly" })*@
                    </td>
                </tr>
            }
        </tbody>
    </table>
    
    <button type="button" id="addRowButton" class="btn btn-primary">Add Item</button>
@*end of dynamic table*@
<input type="hidden" id="InvoiceItemsViewModel" name="InvoiceItemsViewModel" />
    <div class="form-group">
        <label class="col-form-label" asp-for="Total"></label>
        <input type="number" class="form-control" asp-for="Total" />
        <span asp-validation-for="Total" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label class="col-form-label" asp-for="Taxes"></label>
        <input type="number" min="1" max="100" id="TotalTaxesPercentage" class="form-control" asp-for="Taxes" />
        <span asp-validation-for="Taxes" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label class="col-form-label" asp-for="Net"></label>
        <input type="number" class="form-control" asp-for="Net" />
        <span asp-validation-for="Net" class="text-danger"></span>
    </div>
     <button type="submit" class="btn btn-success">Save Invoice</button>
    <a asp-action="Index" class="btn btn-light">Cancel</a>
</form>

@section Scripts {

    <script>
        $(document).ready(function () {
            // Initialize the dynamic table
            var rowIndex = @Model.InvoiceItemsViewModel.Count;
            var invoiceItemsArray = [];
            // Add a row to the table
            function addRow() {
                $.ajax({
                    url: '@Url.Action("AddInvoiceItemRow", "Invoice")',
                    type: 'GET',
                    data: { index: rowIndex },
                    success: function (result) {
                        $('#invoiceTable tbody').append(result);
                        var newItem = {
                        ItemId: null,
                        Unit: null,
                        Quantity: null,
                        Price: null,
                        Discount:null,
                        InvoiceItemTotal: null,
                        InvoiceItemNet: null
                    };
                    invoiceItemsArray.push(newItem);
                        rowIndex++;
                    },
                    error: function (xhr, status, error) {
                        console.log(error);
                    }
                });
            }

            // Attach event handler to the add row button
            $('#addRowButton').on('click', function () {
                addRow();
            });
            $('form').on('submit', function () {
            // Bind the array of InvoiceItemViewModel objects to the InvoiceItemsViewModel property
            $('input[id^="InvoiceItemsViewModel"]').each(function (index) {
                //var propertyName = $(this).attr('name').replace('InvoiceItemsViewModel[0].', '');
                invoiceItemsArray[index][propertyName] = $(this).val(); // Adjust the index based on your property count
            });
            // Set the InvoiceItemsViewModel property with the array
            var invoiceItemsJson = JSON.stringify(invoiceItemsArray);
            console.log(invoiceItemsJson)
            $('#InvoiceItemsViewModel').val(invoiceItemsJson);
        });
        });

        // Remove row button click event
        //$(document).on('click', '.remove-row', function() {
        //    $(this).closest('tr').remove();
        //});

        //// Function to calculate the net value
        //function calculateNet(discount, unit, price) {
        //    // Perform your calculation here
        //    // For example:
        //    var net =  price * (discount/100);
        //    return net;
        //}
    </script>
}

